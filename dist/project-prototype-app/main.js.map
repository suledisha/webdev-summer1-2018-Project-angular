{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/author-book-list/author-book-list.component.css","webpack:///./src/app/author-book-list/author-book-list.component.html","webpack:///./src/app/author-book-list/author-book-list.component.ts","webpack:///./src/app/author-page/author-page.component.css","webpack:///./src/app/author-page/author-page.component.html","webpack:///./src/app/author-page/author-page.component.ts","webpack:///./src/app/book-details/book-details.component.css","webpack:///./src/app/book-details/book-details.component.html","webpack:///./src/app/book-details/book-details.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/public-profile/public-profile.component.css","webpack:///./src/app/public-profile/public-profile.component.html","webpack:///./src/app/public-profile/public-profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/search-page/search-page.component.css","webpack:///./src/app/search-page/search-page.component.html","webpack:///./src/app/search-page/search-page.component.ts","webpack:///./src/app/services/authored-booklist.service.client.ts","webpack:///./src/app/services/book-details.service.client.ts","webpack:///./src/app/services/book.service.client.ts","webpack:///./src/app/services/like.service.client.ts","webpack:///./src/app/services/public-profile.service.client.ts","webpack:///./src/app/services/search-page.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport {SearchPageServiceClient} from './services/search-page.service.client';\nimport {FormsModule} from '@angular/forms';\nimport {routing} from './app.routing';\nimport { BookDetailsComponent } from './book-details/book-details.component';\nimport {BookDetailsServiceClient} from './services/book-details.service.client';\nimport {BookServiceClient} from './services/book.service.client';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport {UserServiceClient} from './services/user.service.client';\nimport {LikeServiceClient} from './services/like.service.client';\nimport { AuthorPageComponent } from './author-page/author-page.component';\nimport { AuthorBookListComponent } from './author-book-list/author-book-list.component';\nimport {AuthoredBookListServiceClient} from './services/authored-booklist.service.client';\nimport { PublicProfileComponent } from './public-profile/public-profile.component';\nimport {PublicProfileServiceClient} from './services/public-profile.service.client';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchPageComponent,\n    BookDetailsComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    AuthorPageComponent,\n    AuthorBookListComponent,\n    PublicProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n\n  ],\n  providers: [SearchPageServiceClient,\n    BookDetailsServiceClient,\n    BookServiceClient,\n    UserServiceClient,\n    LikeServiceClient,\n    AuthoredBookListServiceClient,\n    PublicProfileServiceClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\r\nimport {SearchPageComponent} from './search-page/search-page.component';\r\nimport {BookDetailsComponent} from './book-details/book-details.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {AuthorPageComponent} from './author-page/author-page.component';\r\nimport {AuthorBookListComponent} from './author-book-list/author-book-list.component';\r\nimport {PublicProfileComponent} from './public-profile/public-profile.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: 'search', pathMatch: 'full'},\r\n  { path: 'search', component: SearchPageComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'author-page', component: AuthorPageComponent},\r\n  { path: 'author-book-list', component: AuthorBookListComponent},\r\n  { path: 'book/:bookId', component: BookDetailsComponent},\r\n  { path: 'user/:userId', component: PublicProfileComponent},\r\n  { path: '**', component: SearchPageComponent} // last\r\n];\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Authored Books</h1>\\n\\n  <input [(ngModel)]=\\\"volumeId\\\"\\n         placeholder=\\\"VolumeId\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <button (click)=\\\"addToAuthoredBooks()\\\"\\n    class=\\\"btn btn-primary btn-block\\\">\\n    Add\\n  </button>\\n\\n  <h2>Authored Books :{{authoredBooks.length}}</h2>\\n  <div *ngFor=\\\"let token of authoredBooks\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\">\\n        {{token.book.title}}\\n        <button (click)=\\\"removeFromAuthoredBooks(token.book._id)\\\"\\n          class=\\\"float-right btn btn-danger\\\">UnAuthor</button>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthoredBookListServiceClient} from '../services/authored-booklist.service.client';\nimport {BookDetailsServiceClient} from '../services/book-details.service.client';\nimport {BookServiceClient} from '../services/book.service.client';\n\n@Component({\n  selector: 'app-author-book-list',\n  templateUrl: './author-book-list.component.html',\n  styleUrls: ['./author-book-list.component.css']\n})\nexport class AuthorBookListComponent implements OnInit {\n\n  volumeId = '';\n  authoredBooks = [];\n  constructor(private service: AuthoredBookListServiceClient,\n              private bookDetailService: BookDetailsServiceClient,\n              private bookService: BookServiceClient) { }\n\n  addToAuthoredBooks() {\n    this.bookDetailService.findBookById(this.volumeId)\n      .then(book => {\n        this.bookService.createBook(book.id, book.volumeInfo.title)\n          .then(newbook => {\n          this.service.addToAuthoredBooks(newbook._id);\n        })\n          .then(authored => {\n          this.service\n            .findAuthoredBooksForUser()\n            .then(authoredBooks => this.authoredBooks = authoredBooks );\n        });\n      });\n  }\n  removeFromAuthoredBooks(bookId) {\n    this.service.removeFromAuthoredBooks(bookId)\n      .then(authored => {\n      this.service\n        .findAuthoredBooksForUser()\n        .then(authoredBooks => this.authoredBooks = authoredBooks );\n    });\n  }\n\n  ngOnInit() {\n    this.service\n      .findAuthoredBooksForUser()\n      .then(authoredBooks => this.authoredBooks = authoredBooks );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Profile</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"firstName\\\"\\n         placeholder=\\\"first name\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"lastName\\\"\\n         placeholder=\\\"lastName\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"bio\\\"\\n         placeholder=\\\"Bio\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"snippet\\\"\\n         placeholder=\\\"Featured Snippet\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"email\\\"\\n         placeholder=\\\"email\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <button (click)=\\\"update()\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Update\\n  </button>\\n  <br>\\n  <button class=\\\"btn btn-success\\\" (click)=\\\"logout()\\\">Logout</button>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/home\\\">Home</a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-author-page',\n  templateUrl: './author-page.component.html',\n  styleUrls: ['./author-page.component.css']\n})\nexport class AuthorPageComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private router: Router) { }\n\n  _id;\n  username;\n  password;\n  firstName;\n  lastName;\n  email;\n  bio;\n  snippet;\n  authoredBooks = [];\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n  update() {\n    // console.log(user);\n    this.service\n      .update(this._id, this.username, this.firstName, this.lastName, this.email, this.bio, this.snippet);\n\n  }\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user => {\n        if (user !== null) {\n          this._id = user._id;\n          this.username = user.username;\n          this.firstName = user.firstName;\n          this.lastName = user.lastName;\n          this.email = user.email;\n          this.bio = user.bio;\n          this.snippet = user.snippet;\n          console.log(user._id);\n        } else {\n          this._id = -1;\n        }\n\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>Book Details</h2>\\n  <h3>{{book.volumeInfo.title}}</h3>\\n  <div *ngFor=\\\"let author of book.volumeInfo.authors\\\"><h3>{{author}}</h3></div>\\n  <div>  <h4>Publisher: {{book.volumeInfo.publisher}}</h4>\\n  <h4>Published Date: {{book.volumeInfo.publishedDate}}</h4>\\n  <h4>Reader Rating: {{book.volumeInfo.averageRating}}</h4>\\n  <img src={{book.volumeInfo.imageLinks.smallThumbnail}}/>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"this.likeBook(book.id,book.volumeInfo.title)\\\">Like!</button>\\n  </div>\\n  <div class=\\\"container-fluid\\\">\\n  <h4>Plot</h4>\\n  <h4>{{book.volumeInfo.description}}</h4>\\n  </div>\\n  <div class=\\\"container-fluid\\\">\\n    <h4>Write a Review</h4>\\n    <input [(ngModel)]=\\\"reviewTitle\\\"\\n           placeholder=\\\"VolumeId\\\"\\n           class=\\\"form-control\\\"/>\\n    <input [(ngModel)]=\\\"reviewText\\\"\\n           placeholder=\\\"VolumeId\\\"\\n           class=\\\"form-control\\\"/>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BookDetailsServiceClient} from '../services/book-details.service.client';\nimport {BookServiceClient} from '../services/book.service.client';\nimport {LikeServiceClient} from '../services/like.service.client';\n\n@Component({\n  selector: 'app-book-details',\n  templateUrl: './book-details.component.html',\n  styleUrls: ['./book-details.component.css']\n})\nexport class BookDetailsComponent implements OnInit {\n\n  bookId = '';\n  reviewText = '';\n  reviewTitle ='';\n  book = {\n    id: '',\n    volumeInfo : {\n      title : '',\n      averageRating: '',\n      description: '',\n      publisher: '',\n      publishedDate: '',\n      imageLinks: {\n        smallThumbnail: ''\n      },\n      authors: []\n    }\n  };\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private service: BookDetailsServiceClient,\n              private bookService: BookServiceClient,\n              private likeService: LikeServiceClient) {\n    this.route.params.subscribe(params => this.loadBook(params['bookId']));\n  }\n\n  ngOnInit() {\n  }\n\n  likeBook(id, title) {\n    this.bookService.createBook(id, title)\n      .then(book => {\n        this.likeService.userLikesBook(book._id);\n      });\n  }\n  loadBook(bookId) {\n    this.bookId = bookId;\n    this.service.findBookById(bookId)\n      .then(book => this.book = book);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Login</h1>\\n  <br>\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <button (click)=\\\"login(username, password)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Login\\n  </button>\\n  <div class=\\\"float-left\\\">\\n    <a routerLink=\\\"/register\\\">Register</a>\\n  </div>\\n  <div class=\\\"float-right\\\">\\n    <a routerLink=\\\"/home\\\">Home</a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Route, Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username;\n  password;\n  login(username, password) {\n    console.log([username, password]);\n    this.service.login(username, password)\n      .then((user) => {\n        if (user._id === -1) {\n          alert('Invalid');\n        } else if (user.role === 'author') {\n          this.router.navigate(['author-page']);\n        } else {\n          this.router.navigate(['profile']);\n        }\n      });\n\n  }\n\n  constructor(private router: Router, private service: UserServiceClient) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Profile</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"firstName\\\"\\n         placeholder=\\\"first name\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"lastName\\\"\\n         placeholder=\\\"lastName\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"email\\\"\\n         placeholder=\\\"email\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <button (click)=\\\"update()\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Update\\n  </button>\\n\\n  <h2>Liked Books :{{likedBooks.length}}</h2>\\n  <div *ngFor=\\\"let token of likedBooks\\\">\\n    <ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\">\\n    {{token.book.title}}\\n    <button (click)=\\\"unlike(token.book._id)\\\"\\n      class=\\\"float-right btn btn-danger\\\">Unlike</button>\\n  </li>\\n    </ul>\\n</div>\\n\\n  <br>\\n  <button class=\\\"btn btn-success\\\" (click)=\\\"logout()\\\">Logout</button>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/home\\\">Home</a>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/admin\\\" *ngIf=\\\"username==='admin'\\\">Admin Page</a>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from '../models/user.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\nimport {LikeServiceClient} from '../services/like.service.client';\nimport {Book} from '../models/book.model.client';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private likeService: LikeServiceClient,\n              private router: Router) { }\n\n  user = {};\n  _id;\n  username;\n  password;\n  firstName;\n  lastName;\n  email;\n  likedBooks = [];\n\n\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n\n  update() {\n    // console.log(user);\n    this.service\n      .update(this._id, this.username, this.firstName, this.lastName, this.email, '', '');\n\n  }\n\n  unlike(bookId) {\n    this.likeService.userUnlikesBook(bookId)\n      .then((likes) => {\n        this.likeService\n          .findLikedBooksForUser()\n          .then(likedBooks => this.likedBooks = likedBooks );\n      });\n\n  }\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user => {\n        if (user !== null) {\n          this._id = user._id;\n          this.username = user.username;\n          this.firstName = user.firstName;\n          this.lastName = user.lastName;\n          this.email = user.email;\n          console.log(user._id);\n        } else {\n          this._id = -1;\n        }\n\n      });\n\n    if (this._id !== -1) {\n      this.likeService\n        .findLikedBooksForUser()\n        .then(likedBooks => this.likedBooks = likedBooks );\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <h2>User Profile</h2>\\r\\n  <h4>Username: {{user.username}}</h4>\\r\\n  <h4>First Name: {{user.firstName}}</h4>\\r\\n  <h4>Last Name: {{user.lastName}}</h4>\\r\\n  <h4>Email: {{user.email}}</h4>\\r\\n\\r\\n  <div *ngIf=\\\"user.role==='author'\\\">\\r\\n  <h4>Bio: {{user.bio}}</h4>\\r\\n  <h4>Snippet: {{user.snippet}}</h4>\\r\\n    <h2>Authored Books :{{books.length}}</h2>\\r\\n    <div *ngFor=\\\"let token of books\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          {{token.book.title}}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"user.role==='reader'\\\">\\r\\n    <h2>Liked Books :{{books.length}}</h2>\\r\\n    <div *ngFor=\\\"let token of books\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          {{token.book.title}}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {User} from '../models/user.model.client';\nimport {AuthoredBookListServiceClient} from '../services/authored-booklist.service.client';\nimport {LikeServiceClient} from '../services/like.service.client';\nimport {PublicProfileServiceClient} from '../services/public-profile.service.client';\n\n@Component({\n  selector: 'app-public-profile',\n  templateUrl: './public-profile.component.html',\n  styleUrls: ['./public-profile.component.css']\n})\nexport class PublicProfileComponent implements OnInit {\n\n  userId: '';\n  user: User;\n  books = [];\n\n  constructor( private route: ActivatedRoute,\n               private service: UserServiceClient,\n               private publicProfileService: PublicProfileServiceClient) {\n    this.route.params.subscribe(params => this.loadUser(params['userId']));\n  }\n\n  loadUser(userId) {\n    this.userId = userId;\n    this.service.findUserById(userId)\n      .then(user => {\n        this.user = user\n        if (user.role === 'author') {\n          this.publicProfileService\n            .findAuthoredBooksUserById(user._id)\n            .then(authoredBooks => this.books = authoredBooks );\n        } else {\n          this.publicProfileService.findLikedBooksUserById(user._id)\n            .then(likedBooks => this.books = likedBooks );\n        }\n      });\n\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Register</h1>\\n  <br>\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"password2\\\"\\n         placeholder=\\\"verify password\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"role\\\"\\n         placeholder=\\\"role\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <button (click)=\\\"register(username, password, password2, role)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Register\\n  </button>\\n  <div class=\\\"float-left\\\">\\n    <a routerLink=\\\"/login\\\">Login</a>\\n  </div>\\n  <div class=\\\"float-right\\\">\\n    <a routerLink=\\\"/home\\\">Home</a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  username;\n  password;\n  password2;\n  role;\n  user;\n  register(username, password, password2, role) {\n    if (password !== password2) {\n      alert('Passwords do not match');\n    } else {\n\n      this.service.findUserByUsername(username).then((user) => {\n        if (user._id === -1) {\n          this.service\n            .createUser(username, password, role)\n            .then(() => {\n              if (role === 'author') {\n                this.router.navigate(['author-page']);\n              } else {\n          this.router.navigate(['profile']); }\n            });\n\n        } else {\n          alert('Username already present');\n        }\n      });\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div>\\n      <input [(ngModel)]=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"Title\\\" >\\n      <small class=\\\"form-text text-muted\\\">Please enter atleast one word of the title of the book</small>\\n    </div>\\n\\n    <div>\\n      <input [(ngModel)]=\\\"author\\\" class=\\\"form-control\\\" placeholder=\\\"Author\\\" >\\n      <small class=\\\"form-text text-muted\\\">Optional: Enter the author name to enhance search</small>\\n    </div>\\n\\n    <button\\n      class=\\\"btn btn-success btn-block\\\"\\n      (click)=\\\"findBook(title, author)\\\">\\n      Find Book!\\n    </button>\\n\\n  </div>\\n  <br/>\\n  <br/>\\n<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\" *ngFor=\\\"let book of books\\\">\\n    <div>\\n      <img src={{book.volumeInfo.imageLinks.smallThumbnail}}/>\\n      <a routerLink=\\\"/book/{{book.id}}\\\"> {{book.volumeInfo.title}}</a>\\n    </div>\\n  </li>\\n\\n</ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SearchPageServiceClient} from '../services/search-page.service.client';\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.css']\n})\nexport class SearchPageComponent implements OnInit {\n\n  books = [];\n  title: String;\n  author: String;\n  constructor(private service: SearchPageServiceClient) {\n\n  }\n\n  ngOnInit() {\n  }\n  findBook(title, author) {\n    this.service.findBookByTitle(title, author)\n      .then(books =>\n        this.books = books.items);\n  }\n\n}\n","export class AuthoredBookListServiceClient {\r\n\r\n  BOOKURL = 'http://localhost:4000/api/authoredbook';\r\n  BOOKURL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com/api/authoredbook';\r\n\r\n  USER_URL = 'http://localhost:4000/api/book/authors';\r\n  USER_URL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com/book/authors';\r\n\r\n  addToAuthoredBooks(bookId) {\r\n    const url = this.BOOKURL + '/' + bookId;\r\n    return fetch(url, {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n  removeFromAuthoredBooks(bookId) {\r\n    const url = this.BOOKURL + '/' + bookId;\r\n    return fetch(url, {\r\n      method: 'delete',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  findAuthoredBooksForUser() {\r\n    return fetch(this.USER_URL, {\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class BookDetailsServiceClient {\r\n  findBookById(bookId) {\r\n    return fetch\r\n    ('https://www.googleapis.com/books/v1/volumes/' + bookId + '?&key=AIzaSyC-1n7EYMBCWCjk5FZUz5f1otN1isYTLU0')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class BookServiceClient {\r\n\r\n  BOOKURL = 'http://localhost:4000/api/book';\r\n  BOOKURL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com/api/book';\r\n\r\n  createBook(id, title) {\r\n    const book = {\r\n      id: id,\r\n      title: title\r\n    };\r\n    return fetch(this.BOOKURL, {\r\n      body: JSON.stringify(book),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }) .then(response => response.json());\r\n  }\r\n}\r\n\r\n","export class LikeServiceClient {\r\n\r\n  USER_URL = 'http://localhost:4000/api/book/likes';\r\n  BOOK_URL = 'http://localhost:4000/api/book';\r\n\r\n  USER_URL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com/api/book/likes';\r\n  BOOK_URL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com/api/book';\r\n\r\n\r\n  findLikedBooksForUser() {\r\n    return fetch(this.USER_URL, {\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  userLikesBook(bookId) {\r\n    const url = this.BOOK_URL + '/' + bookId + '/likes';\r\n    return fetch(url, {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  userUnlikesBook(bookId) {\r\n    const url = this.BOOK_URL + '/' + bookId + '/unlikes';\r\n    return fetch(url, {\r\n      method: 'delete',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n}\r\n","export class PublicProfileServiceClient {\r\n  URL = 'http://localhost:4000';\r\n  URL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com';\r\n\r\n  findLikedBooksUserById(userId) {\r\n    return fetch(this.URL + '/api/user/' + userId + '/liked')\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findAuthoredBooksUserById(userId) {\r\n    return fetch(this.URL + '/api/user/' + userId + '/authored')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class SearchPageServiceClient {\r\n  findBookByTitle(title, author) {\r\n    return fetch\r\n    ('https://www.googleapis.com/books/v1/volumes?q=' + title + '+inauthor:' + author + '&key=AIzaSyC-1n7EYMBCWCjk5FZUz5f1otN1isYTLU0')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class UserServiceClient {\r\n\r\n  URL = 'http://localhost:4000';\r\n  URL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com';\r\n\r\n  findUserById(userId) {\r\n    return fetch(this.URL + '/api/user/' + userId)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findUserByUsername(username) {\r\n    const credentials = {\r\n      username: username\r\n    };\r\n    return fetch(this.URL + '/api/register', {\r\n      method: 'post',\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }) .then(response => response.json());\r\n  }\r\n\r\n  profile() {\r\n    return fetch(this.URL + '/api/profile',\r\n      {\r\n        credentials: 'include', // include, same-origin, *omit\r\n      })\r\n      .then(response => response.json());\r\n  }\r\n  login(username, password) {\r\n    const credentials = {\r\n      username : username,\r\n      password: password\r\n    };\r\n    return fetch(this.URL + '/api/login', {\r\n      method: 'post',\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n  logout() {\r\n    return fetch(this.URL + '/api/logout', {\r\n      method: 'post',\r\n      credentials: 'include', // include, same-origin, *omit\r\n    });\r\n  }\r\n\r\n  createUser(username, password, role) {\r\n    const user = {\r\n      username: username,\r\n      password: password,\r\n      role: role\r\n    };\r\n    return fetch(this.URL + '/api/user', {\r\n      body: JSON.stringify(user),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  update(_id, username, firstName, lastName, email, bio, snippet) {\r\n    const url = this.URL + '/api/profile';\r\n    const user = {_id, username, firstName, lastName, email, bio, snippet};\r\n    return fetch(url, {\r\n      method: 'put',\r\n      body: JSON.stringify(user),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}