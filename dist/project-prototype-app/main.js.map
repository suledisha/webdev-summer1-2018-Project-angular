{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-book-list/admin-book-list.component.css","webpack:///./src/app/admin-book-list/admin-book-list.component.html","webpack:///./src/app/admin-book-list/admin-book-list.component.ts","webpack:///./src/app/admin-page/admin-page.component.css","webpack:///./src/app/admin-page/admin-page.component.html","webpack:///./src/app/admin-page/admin-page.component.ts","webpack:///./src/app/admin-reviewlist/admin-reviewlist.component.css","webpack:///./src/app/admin-reviewlist/admin-reviewlist.component.html","webpack:///./src/app/admin-reviewlist/admin-reviewlist.component.ts","webpack:///./src/app/admin-userlist/admin-userlist.component.css","webpack:///./src/app/admin-userlist/admin-userlist.component.html","webpack:///./src/app/admin-userlist/admin-userlist.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/author-book-list/author-book-list.component.css","webpack:///./src/app/author-book-list/author-book-list.component.html","webpack:///./src/app/author-book-list/author-book-list.component.ts","webpack:///./src/app/author-page/author-page.component.css","webpack:///./src/app/author-page/author-page.component.html","webpack:///./src/app/author-page/author-page.component.ts","webpack:///./src/app/book-details/book-details.component.css","webpack:///./src/app/book-details/book-details.component.html","webpack:///./src/app/book-details/book-details.component.ts","webpack:///./src/app/community-page/community-page.component.css","webpack:///./src/app/community-page/community-page.component.html","webpack:///./src/app/community-page/community-page.component.ts","webpack:///./src/app/landing-page/landing-page.component.css","webpack:///./src/app/landing-page/landing-page.component.html","webpack:///./src/app/landing-page/landing-page.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/public-profile/public-profile.component.css","webpack:///./src/app/public-profile/public-profile.component.html","webpack:///./src/app/public-profile/public-profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/search-page/search-page.component.css","webpack:///./src/app/search-page/search-page.component.html","webpack:///./src/app/search-page/search-page.component.ts","webpack:///./src/app/services/admin-userlist.service.client.ts","webpack:///./src/app/services/authored-booklist.service.client.ts","webpack:///./src/app/services/book-details.service.client.ts","webpack:///./src/app/services/book.service.client.ts","webpack:///./src/app/services/follow.service.client.ts","webpack:///./src/app/services/like.service.client.ts","webpack:///./src/app/services/public-profile.service.client.ts","webpack:///./src/app/services/review.service.client.ts","webpack:///./src/app/services/search-page.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".bg{\\r\\n  width: 100%;\\r\\n  background: url('https://images.pexels.com/photos/1112048/pexels-photo-1112048.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260')\\r\\n  repeat center;\\r\\n  background-size: 100% 100%;\\r\\n  background-position: center;\\r\\n  position: absolute;top:0; left:0\\r\\n}\\r\\n.jumbotron{\\r\\n  opacity: 0.7;\\r\\n  font-size: medium;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"bg\\\">\\r\\n  <div class=\\\"jumbotron\\\">\\r\\n    <a routerLink=\\\"/home\\\">Home</a>\\r\\n    &nbsp; &nbsp;\\r\\n    <a routerLink=\\\"/admin-page\\\">Admin page</a>\\r\\n    <br>\\r\\n    <br>\\r\\n<div *ngFor=\\\"let book of books\\\">\\r\\n  <ul class=\\\"list-group\\\">\\r\\n    <li class=\\\"list-group-item\\\">\\r\\n      {{book.title}}\\r\\n      <button (click)=\\\"remove(book._id)\\\"\\r\\n        class=\\\"float-right btn btn-danger\\\">remove</button>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {BookServiceClient} from '../services/book.service.client';\n\n@Component({\n  selector: 'app-admin-book-list',\n  templateUrl: './admin-book-list.component.html',\n  styleUrls: ['./admin-book-list.component.css']\n})\nexport class AdminBookListComponent implements OnInit {\n\n  constructor(private service: BookServiceClient) { }\n\n  books;\n  remove(bookId) {\n    this.service.deleteBookById(bookId)\n      .then((book) => {\n        this.service.findAllBooks()\n          .then(books => this.books = books);\n      });\n  }\n\n  ngOnInit() {\n    this.service.findAllBooks()\n      .then(books => this.books = books);\n  }\n\n}\n","module.exports = \".bg{\\r\\n  width: 100%;\\r\\n  background: url('https://images.pexels.com/photos/1112048/pexels-photo-1112048.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260')\\r\\n  repeat center;\\r\\n  background-size: 100% 100%;\\r\\n  background-position: center;\\r\\n  position: absolute;top:0; left:0\\r\\n}\\r\\n.jumbotron{\\r\\n  opacity: 0.8;\\r\\n  font-size: medium;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"bg\\\">\\n  <div class=\\\"jumbotron\\\">\\n  <h1>Admin Page</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         readonly\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"firstName\\\"\\n         placeholder=\\\"first name\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"lastName\\\"\\n         placeholder=\\\"lastName\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"email\\\"\\n         placeholder=\\\"email\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <button (click)=\\\"update()\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Update\\n  </button>\\n  <br>\\n  <button class=\\\"btn btn-success\\\" (click)=\\\"logout()\\\">Logout</button>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/home\\\">Home</a>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/bookList\\\">Book List</a>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/reviewList\\\">Review List</a>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/userList\\\">User List</a>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/community\\\">Bookmarked Community</a>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.css']\n})\nexport class AdminPageComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private router: Router) { }\n\n  user = {};\n  _id;\n  username;\n  password;\n  firstName;\n  lastName;\n  email;\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n  update() {\n    // console.log(user);\n    this.service\n      .update(this._id, this.username, this.firstName, this.lastName, this.email, '', '');\n\n  }\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user => {\n        if (user !== null) {\n          this._id = user._id;\n          this.username = user.username;\n          this.firstName = user.firstName;\n          this.lastName = user.lastName;\n          this.email = user.email;\n          console.log(user._id);\n        } else {\n          this._id = -1;\n        }\n\n      });\n  }\n\n}\n","module.exports = \".bg{\\r\\n  width: 100%;\\r\\n  background: url('https://images.pexels.com/photos/1112048/pexels-photo-1112048.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260')\\r\\n  repeat center;\\r\\n  background-size: 100% 100%;\\r\\n  background-position: center;\\r\\n  position: absolute;top:0; left:0\\r\\n}\\r\\n.jumbotron{\\r\\n  opacity: 0.7;\\r\\n  font-size: medium;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"bg\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <a routerLink=\\\"/home\\\">Home</a>\\n    &nbsp; &nbsp;\\n    <a routerLink=\\\"/admin-page\\\">Admin page</a>\\n    <br>\\n    <br>\\n<div *ngFor=\\\"let review of reviews\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">\\n      {{review.title}}\\n      <br>\\n      {{review.text}}\\n      <button (click)=\\\"remove(review._id)\\\"\\n        class=\\\"float-right btn btn-danger\\\">Remove</button>\\n    </li>\\n  </ul>\\n</div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ReviewServiceClient} from '../services/review.service.client';\n\n@Component({\n  selector: 'app-admin-reviewlist',\n  templateUrl: './admin-reviewlist.component.html',\n  styleUrls: ['./admin-reviewlist.component.css']\n})\nexport class AdminReviewlistComponent implements OnInit {\n\n  constructor(private service: ReviewServiceClient) { }\n  reviews;\n\n  remove(reviewId) {\n    this.service.deleteReviewById(reviewId)\n      .then((rev) => {\n        this.service.findAllReviews()\n          .then(reviews => this.reviews = reviews);\n      });\n  }\n\n  ngOnInit() {\n    this.service.findAllReviews()\n      .then(reviews => this.reviews = reviews);\n  }\n\n}\n","module.exports = \".bg{\\r\\n  width: 100%;\\r\\n  background: url('https://images.pexels.com/photos/1112048/pexels-photo-1112048.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260')\\r\\n  repeat center;\\r\\n  background-size: 100% 100%;\\r\\n  background-position: center;\\r\\n  position: absolute;top:0; left:0\\r\\n}\\r\\n.jumbotron{\\r\\n  opacity: 0.7;\\r\\n  font-size: medium;\\r\\n}\\r\\n.table{\\r\\n  width: 100%;\\r\\n}\\r\\nth, td {\\r\\n  padding: 15px;\\r\\n  text-align: left;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"bg\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <a routerLink=\\\"/home\\\">Home</a>\\n    &nbsp; &nbsp;\\n    <a routerLink=\\\"/admin-page\\\">Admin page</a>\\n    <br>\\n    <br>\\n    <table class=\\\"table\\\">\\n      <thead>\\n      <tr>\\n        <th>Username</th>\\n        <th>Password</th>\\n        <th>First Name</th>\\n        <th>Last Name</th>\\n        <th>Role</th>\\n        <th>&nbsp;</th>\\n      </tr>\\n      <tr>\\n        <td><input [(ngModel)]=\\\"username\\\"\\n                         placeholder=\\\"username\\\"\\n                         class=\\\"form-control\\\"/></td>\\n        <td><input [(ngModel)]=\\\"password\\\"\\n                          type=\\\"password\\\"\\n                         placeholder=\\\"password\\\"\\n                         class=\\\"form-control\\\"/></td>\\n        <td><input [(ngModel)]=\\\"firstName\\\"\\n                         placeholder=\\\"First Name\\\"\\n                         class=\\\"form-control\\\"/></td>\\n        <td><input [(ngModel)]=\\\"lastName\\\"\\n                         placeholder=\\\"Last Name\\\"\\n                         class=\\\"form-control\\\"/></td>\\n        <td><select  [(ngModel)]=\\\"role\\\" class=\\\"form-control\\\">\\n          <option value=\\\"reader\\\" selected>reader</option>\\n          <option value=\\\"author\\\">author</option>\\n        </select></td>\\n        <td><button (click)=\\\"add()\\\" class=\\\"btn btn-success\\\">Add</button> &nbsp;  &nbsp;\\n          <button (click)=\\\"update()\\\" class=\\\"btn btn-success\\\">Update</button></td>\\n      </tr>\\n\\n      </thead>\\n      <tbody>\\n    <tr *ngFor=\\\"let user of users\\\">\\n      <td *ngIf=\\\"user.username!=='admin'\\\">{{user.username}}</td>\\n      <td *ngIf=\\\"user.username!=='admin'\\\">{{\\\"**********\\\"}}</td>\\n      <td *ngIf=\\\"user.username!=='admin'\\\">{{user.firstName}}</td>\\n      <td *ngIf=\\\"user.username!=='admin'\\\">{{user.lastName}}</td>\\n      <td *ngIf=\\\"user.username!=='admin'\\\">{{user.role}}</td>\\n      <td *ngIf=\\\"user.username!=='admin'\\\"><button (click)=\\\"setuser(user)\\\" class=\\\"btn btn-primary\\\">Edit</button>\\n        &nbsp;  &nbsp;\\n      <button (click)=\\\"remove(user._id)\\\"\\n                   class=\\\"btn btn-danger\\\">Remove</button></td>\\n    </tr>\\n    </tbody>\\n</table>\\n</div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from '../models/user.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {AdminUserListServiceClient} from '../services/admin-userlist.service.client';\n\n@Component({\n  selector: 'app-admin-userlist',\n  templateUrl: './admin-userlist.component.html',\n  styleUrls: ['./admin-userlist.component.css']\n})\nexport class AdminUserlistComponent implements OnInit {\n\n  users;\n  username;\n  password;\n  firstName;\n  lastName;\n  role;\n  _id;\n\n  constructor(private service: UserServiceClient,\n              private adminService: AdminUserListServiceClient) {\n  }\n\n  add() {\n    this.service.findUserByUsername(this.username).then((user) => {\n      if (user._id === -1) {\n        this.adminService\n          .addUser(this.username, this.password, this.firstName, this.lastName, this.role)\n          .then((newuser) => {\n            this.service.findAllUsers()\n              .then(users => this.users = users);\n          });\n\n      } else {\n        alert('Username already present');\n      }\n  });\n  }\n\n  update() {\n    // console.log(user);\n\n    this.adminService\n      .updateUser(this._id, this.username, this.password, this.firstName, this.lastName, this.role)\n      .then((user) => {\n        this.service.findAllUsers()\n          .then(users => this.users = users);\n      });\n\n  }\n\n  setuser(user) {\n    this._id = user._id;\n    this.username = user.username;\n    this.password = user.password;\n    this.firstName = user.firstName;\n    this.lastName = user.lastName;\n    this.role = user.role;\n  }\n  remove(userId) {\n    this.service.deleteUserById(userId)\n      .then((user) => {\n        this.service.findAllUsers()\n          .then(users => this.users = users);\n      });\n  }\n  ngOnInit() {\n    this.service.findAllUsers()\n      .then(users => this.users = users);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport {SearchPageServiceClient} from './services/search-page.service.client';\nimport {FormsModule} from '@angular/forms';\nimport {routing} from './app.routing';\nimport { BookDetailsComponent } from './book-details/book-details.component';\nimport {BookDetailsServiceClient} from './services/book-details.service.client';\nimport {BookServiceClient} from './services/book.service.client';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport {UserServiceClient} from './services/user.service.client';\nimport {LikeServiceClient} from './services/like.service.client';\nimport { AuthorPageComponent } from './author-page/author-page.component';\nimport { AuthorBookListComponent } from './author-book-list/author-book-list.component';\nimport {AuthoredBookListServiceClient} from './services/authored-booklist.service.client';\nimport { PublicProfileComponent } from './public-profile/public-profile.component';\nimport {PublicProfileServiceClient} from './services/public-profile.service.client';\nimport {ReviewServiceClient} from './services/review.service.client';\nimport {FollowServiceClient} from './services/follow.service.client';\nimport { AdminPageComponent } from './admin-page/admin-page.component';\nimport { AdminBookListComponent } from './admin-book-list/admin-book-list.component';\nimport { AdminReviewlistComponent } from './admin-reviewlist/admin-reviewlist.component';\nimport { AdminUserlistComponent } from './admin-userlist/admin-userlist.component';\nimport { CommunityPageComponent } from './community-page/community-page.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport {AdminUserListServiceClient} from './services/admin-userlist.service.client';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchPageComponent,\n    BookDetailsComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    AuthorPageComponent,\n    AuthorBookListComponent,\n    PublicProfileComponent,\n    AdminPageComponent,\n    AdminBookListComponent,\n    AdminReviewlistComponent,\n    AdminUserlistComponent,\n    CommunityPageComponent,\n    LandingPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n\n  ],\n  providers: [SearchPageServiceClient,\n    BookDetailsServiceClient,\n    BookServiceClient,\n    UserServiceClient,\n    LikeServiceClient,\n    AuthoredBookListServiceClient,\n    PublicProfileServiceClient,\n    ReviewServiceClient,\n    FollowServiceClient,\n    AdminUserListServiceClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\r\nimport {SearchPageComponent} from './search-page/search-page.component';\r\nimport {BookDetailsComponent} from './book-details/book-details.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {AuthorPageComponent} from './author-page/author-page.component';\r\nimport {AuthorBookListComponent} from './author-book-list/author-book-list.component';\r\nimport {PublicProfileComponent} from './public-profile/public-profile.component';\r\nimport {AdminPageComponent} from './admin-page/admin-page.component';\r\nimport {AdminBookListComponent} from './admin-book-list/admin-book-list.component';\r\nimport {AdminReviewlistComponent} from './admin-reviewlist/admin-reviewlist.component';\r\nimport {AdminUserlistComponent} from './admin-userlist/admin-userlist.component';\r\nimport {CommunityPageComponent} from './community-page/community-page.component';\r\nimport {LandingPageComponent} from './landing-page/landing-page.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: 'landing', pathMatch: 'full'},\r\n  { path: 'search', component: SearchPageComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'community', component: CommunityPageComponent},\r\n  { path: 'admin-page', component: AdminPageComponent},\r\n  { path: 'bookList', component: AdminBookListComponent},\r\n  { path: 'reviewList', component: AdminReviewlistComponent},\r\n  { path: 'userList', component: AdminUserlistComponent},\r\n  { path: 'author-page', component: AuthorPageComponent},\r\n  { path: 'author-book-list', component: AuthorBookListComponent},\r\n  { path: 'book/:bookId', component: BookDetailsComponent},\r\n  { path: 'user/:userId', component: PublicProfileComponent},\r\n  { path: 'landing', component: LandingPageComponent},\r\n  { path: '**', component: LandingPageComponent} // last\r\n];\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","module.exports = \".bg{\\r\\n  width: 100%;\\r\\n  background: url('https://images.pexels.com/photos/1112048/pexels-photo-1112048.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260')\\r\\n  repeat center;\\r\\n  background-size: 100% 100%;\\r\\n  background-position: center;\\r\\n  position: absolute;top:0; left:0\\r\\n}\\r\\n.jumbotron{\\r\\n  opacity: 0.7;\\r\\n  font-size: medium;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"bg\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <a routerLink=\\\"/home\\\">Home</a>\\n    &nbsp; &nbsp;\\n    <a routerLink=\\\"/community\\\">Bookmarked Community</a>\\n    &nbsp; &nbsp;\\n    <a routerLink=\\\"/search\\\">Search</a>\\n    &nbsp; &nbsp;\\n    <a routerLink=\\\"/author-page\\\">My Page</a>\\n    <br>\\n    <br>\\n  <h1>Authored Books</h1>\\n\\n  <input [(ngModel)]=\\\"volumeId\\\"\\n         placeholder=\\\"VolumeId\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <button (click)=\\\"addToAuthoredBooks()\\\"\\n    class=\\\"btn btn-primary btn-block\\\">\\n    Add\\n  </button>\\n\\n  <h2>Authored Books :{{authoredBooks.length}}</h2>\\n  <div *ngFor=\\\"let token of authoredBooks\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\">\\n        <a routerLink=\\\"/book/{{token.book.id}}\\\">  {{token.book.title}}</a>\\n        <button (click)=\\\"removeFromAuthoredBooks(token.book._id)\\\"\\n          class=\\\"float-right btn btn-danger\\\">UnAuthor</button>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthoredBookListServiceClient} from '../services/authored-booklist.service.client';\nimport {BookDetailsServiceClient} from '../services/book-details.service.client';\nimport {BookServiceClient} from '../services/book.service.client';\n\n@Component({\n  selector: 'app-author-book-list',\n  templateUrl: './author-book-list.component.html',\n  styleUrls: ['./author-book-list.component.css']\n})\nexport class AuthorBookListComponent implements OnInit {\n\n  volumeId = '';\n  authoredBooks = [];\n  constructor(private service: AuthoredBookListServiceClient,\n              private bookDetailService: BookDetailsServiceClient,\n              private bookService: BookServiceClient) { }\n\n  addToAuthoredBooks() {\n    this.bookDetailService.findBookById(this.volumeId)\n      .then(book => {\n        this.bookService.createBook(book.id, book.volumeInfo.title)\n          .then(newbook => {\n          this.service.addToAuthoredBooks(newbook._id);\n        })\n          .then(authored => {\n          this.service\n            .findAuthoredBooksForUser()\n            .then(authoredBooks => this.authoredBooks = authoredBooks );\n        });\n      });\n  }\n  removeFromAuthoredBooks(bookId) {\n    this.service.removeFromAuthoredBooks(bookId)\n      .then(authored => {\n      this.service\n        .findAuthoredBooksForUser()\n        .then(authoredBooks => this.authoredBooks = authoredBooks );\n    });\n  }\n\n  ngOnInit() {\n    this.service\n      .findAuthoredBooksForUser()\n      .then(authoredBooks => this.authoredBooks = authoredBooks );\n  }\n\n}\n","module.exports = \".bg{\\r\\n  width: 100%;\\r\\n  background: url('https://images.pexels.com/photos/1112048/pexels-photo-1112048.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260')\\r\\n  repeat center;\\r\\n  background-size: 100% 100%;\\r\\n  background-position: center;\\r\\n  position: absolute;top:0; left:0\\r\\n}\\r\\n.jumbotron{\\r\\n  opacity: 0.8;\\r\\n  font-size: medium;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"bg\\\">\\n  <div class=\\\"jumbotron\\\">\\n  <h1>Profile</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         readonly\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"firstName\\\"\\n         placeholder=\\\"first name\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"lastName\\\"\\n         placeholder=\\\"lastName\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"bio\\\"\\n         placeholder=\\\"Bio\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"snippet\\\"\\n         placeholder=\\\"Featured Snippet\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"email\\\"\\n         placeholder=\\\"email\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <button (click)=\\\"update()\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Update\\n  </button>\\n  <br>\\n  <button class=\\\"btn btn-success\\\" (click)=\\\"logout()\\\">Logout</button>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/home\\\">Home</a>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/community\\\">Bookmarked Community</a>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/author-book-list\\\">My Books</a>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-author-page',\n  templateUrl: './author-page.component.html',\n  styleUrls: ['./author-page.component.css']\n})\nexport class AuthorPageComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private router: Router) { }\n\n  _id;\n  username;\n  password;\n  firstName;\n  lastName;\n  email;\n  bio;\n  snippet;\n  authoredBooks = [];\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n  update() {\n    // console.log(user);\n    this.service\n      .update(this._id, this.username, this.firstName, this.lastName, this.email, this.bio, this.snippet);\n\n  }\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user => {\n        if (user !== null) {\n          this._id = user._id;\n          this.username = user.username;\n          this.firstName = user.firstName;\n          this.lastName = user.lastName;\n          this.email = user.email;\n          this.bio = user.bio;\n          this.snippet = user.snippet;\n          console.log(user._id);\n        } else {\n          this._id = -1;\n        }\n\n      });\n  }\n\n}\n","module.exports = \".bg{\\r\\n  width: 100%;\\r\\n  background: url('https://images.pexels.com/photos/256477/pexels-photo-256477.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260')\\r\\n  repeat center;\\r\\n  background-size: 100% 100%;\\r\\n  background-position: center;\\r\\n  position: absolute;top:0; left:0\\r\\n}\\r\\n.jumbotron{\\r\\n  opacity: 0.9;\\r\\n  font-size: medium;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"bg\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <a routerLink=\\\"/profile\\\" *ngIf=\\\"role==='reader'\\\" >Profile</a>\\n    <a routerLink=\\\"/author-page\\\" *ngIf=\\\"role==='author'\\\">My Page</a>\\n    <a routerLink=\\\"/admin-page\\\" *ngIf=\\\"role==='admin'\\\" >Admin-Page</a>\\n    &nbsp; &nbsp;\\n    <a routerLink=\\\"/community\\\">Bookmarked Community</a>\\n    &nbsp; &nbsp;\\n    <a routerLink=\\\"/home\\\">Home</a>\\n    &nbsp; &nbsp;\\n    <a routerLink=\\\"/search\\\">Search</a>\\n    &nbsp; &nbsp;\\n\\n\\n    <br>\\n    <br>\\n  <h2 align=\\\"center\\\">Book Details</h2>\\n  <h3  align=\\\"center\\\">{{book.volumeInfo.title}}</h3>\\n  <div  align=\\\"center\\\" *ngFor=\\\"let author of book.volumeInfo.authors\\\"><h3>{{author}}</h3></div>\\n  <div  align=\\\"center\\\">  <h4>Publisher: {{book.volumeInfo.publisher}}</h4>\\n  <h4  align=\\\"center\\\">Published Date: {{book.volumeInfo.publishedDate}}</h4>\\n  <h4  align=\\\"center\\\">Reader Rating: {{book.volumeInfo.averageRating}}</h4>\\n  <img  align=\\\"center\\\" src={{book.volumeInfo.imageLinks.smallThumbnail}}/>\\n    <br>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"this.likeBook(book.id,book.volumeInfo.title)\\\">Like!</button>\\n    <small class=\\\"form-text text-muted\\\">Login/Register to like</small>\\n  </div>\\n  <div class=\\\"container-fluid\\\">\\n  <h3>Plot</h3>\\n  <h4>{{book.volumeInfo.description}}</h4>\\n  </div>\\n  <div class=\\\"container-fluid\\\">\\n    <br>\\n    <h4>Write a Review</h4>\\n    <small class=\\\"form-text text-muted\\\">Login/Register to review</small>\\n    <br>\\n    <input [(ngModel)]=\\\"reviewTitle\\\"\\n           placeholder=\\\"Summary\\\"\\n           class=\\\"form-control\\\"/>\\n    <br>\\n    <input [(ngModel)]=\\\"reviewText\\\"\\n           placeholder=\\\"Details\\\"\\n           class=\\\"form-control\\\"/>\\n    <br>\\n    <button\\n      (click)=\\\"this.submitReview(book.id,book.volumeInfo.title)\\\"\\n      class=\\\"btn btn-success\\\">Submit Review!</button>\\n  </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BookDetailsServiceClient} from '../services/book-details.service.client';\nimport {BookServiceClient} from '../services/book.service.client';\nimport {LikeServiceClient} from '../services/like.service.client';\nimport {ReviewServiceClient} from '../services/review.service.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {User} from '../models/user.model.client';\n\n@Component({\n  selector: 'app-book-details',\n  templateUrl: './book-details.component.html',\n  styleUrls: ['./book-details.component.css']\n})\nexport class BookDetailsComponent implements OnInit {\n\n  _id;\n  role;\n  bookId = '';\n  reviewText = '';\n  reviewTitle = '';\n  book = {\n    id: '',\n    volumeInfo : {\n      title : '',\n      averageRating: '',\n      description: '',\n      publisher: '',\n      publishedDate: '',\n      imageLinks: {\n        smallThumbnail: ''\n      },\n      authors: []\n    }\n  };\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private userService: UserServiceClient,\n              private service: BookDetailsServiceClient,\n              private bookService: BookServiceClient,\n              private likeService: LikeServiceClient,\n              private reviewService: ReviewServiceClient) {\n    this.route.params.subscribe(params => this.loadBook(params['bookId']));\n  }\n\n  ngOnInit() {\n    this.userService\n      .profile()\n      .then(user => {\n        if (user !== null) {\n          this._id = user._id;\n          this.role = user.role;\n          console.log(user._id);\n        } else {\n          this._id = '-1';\n          this.role = '';\n        }\n\n      });\n\n  }\n\n  likeBook(id, title) {\n    if (this._id === '-1') {\n      alert('Please Login/Register up to like');\n        this.router.navigate(['login']);\n    } else {\n    this.bookService.findBookByCredential(id)\n      .then(book => {\n        if (book._id === '-1') {\n          this.bookService.createBook(id, title)\n            .then(newbook => {\n              this.likeService.userLikesBook(newbook._id);\n            }).then((like) => {\n            this.router.navigate(['profile']);\n          });\n        } else {\n          this.likeService.userLikesBook(book._id)\n            .then((like) => {\n      this.router.navigate(['profile']);\n    });\n        }\n      });\n  }}\n\n  submitReview(id, title) {\n    if (this._id === '-1') {\n      alert('Please Login/Register up to review');\n      this.router.navigate(['login']);\n    } else {\n      this.bookService.findBookByCredential(id)\n      .then(book => {\n        if (book._id === '-1') {\n          this.bookService.createBook(id, title)\n            .then(newbook => {\n              this.reviewService.userReviewsBook(newbook._id, this.reviewTitle, this.reviewText)\n                .then((review) => {\n                  this.router.navigate(['profile']);\n                });\n            });\n        } else {\n          this.reviewService.userReviewsBook(book._id, this.reviewTitle, this.reviewText)\n            .then((review) => {\n              this.router.navigate(['profile']);\n            });\n        }\n      });\n  }}\n\n\n  loadBook(bookId) {\n    this.bookId = bookId;\n    this.service.findBookById(bookId)\n      .then(book => this.book = book);\n  }\n}\n","module.exports = \"\\r\\n.bg{\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background: url('https://images.pexels.com/photos/48020/books-education-school-literature-48020.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260') repeat center;\\r\\n  background-size: 100% 100%;\\r\\n  background-position: center;\\r\\n  position: absolute;top:0; left:0\\r\\n}\\r\\n.jumbotron{\\r\\n  opacity: 0.8;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"bg\\\">\\r\\n<div class=\\\"jumbotron\\\">\\r\\n  <a routerLink=\\\"/profile\\\" *ngIf=\\\"role==='reader'\\\" >Profile</a>\\r\\n  <a routerLink=\\\"/author-page\\\" *ngIf=\\\"role==='author'\\\">My Page</a>\\r\\n  <a routerLink=\\\"/admin-page\\\" *ngIf=\\\"role==='admin'\\\" >Admin-Page</a>\\r\\n  &nbsp; &nbsp;\\r\\n  <a routerLink=\\\"/search\\\">Search</a>\\r\\n  &nbsp; &nbsp;\\r\\n  <a routerLink=\\\"/login\\\">Login</a>\\r\\n  &nbsp; &nbsp;\\r\\n  <a routerLink=\\\"/register\\\">Register</a>\\r\\n  &nbsp; &nbsp;\\r\\n  <a routerLink=\\\"/home\\\">Home</a>\\r\\n  <br>\\r\\n  <br>\\r\\n<h1> Welcome to the Bookmarked community!!</h1>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <h3>Featured Books</h3>\\r\\n    <div *ngFor=\\\"let book of books\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <a routerLink=\\\"/book/{{book.id}}\\\"> {{book.title}}</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <h3>Avid Readers</h3>\\r\\n    <div *ngFor=\\\"let user of readers\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <a routerLink=\\\"/user/{{user._id}}\\\"> {{user.firstName}}  {{user.lastName}}</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <h3>Favorite Authors</h3>\\r\\n    <div *ngFor=\\\"let user of authors\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <a routerLink=\\\"/user/{{user._id}}\\\"> {{user.firstName}}  {{user.lastName}}</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {BookServiceClient} from '../services/book.service.client';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-community-page',\n  templateUrl: './community-page.component.html',\n  styleUrls: ['./community-page.component.css']\n})\nexport class CommunityPageComponent implements OnInit {\n\n  constructor(private bookservice: BookServiceClient,\n              private userservice: UserServiceClient) { }\n  books;\n  authors;\n  readers;\n  _id;\n  role;\n\n  ngOnInit() {\n    this.userservice\n      .profile()\n      .then(user => {\n        if (user !== null) {\n          this._id = user._id;\n          this.role = user.role;\n          console.log(user._id);\n        } else {\n          this._id = -1;\n          this.role = '';\n        }\n\n      });\n    this.bookservice.findAllBooks()\n      .then(books => this.books = books);\n    this.userservice.findAllAuthors()\n      .then(authors => this.authors = authors);\n    this.userservice.findAllReaders()\n      .then(readers => this.readers = readers);\n  }\n\n}\n","module.exports = \"\\r\\n.bg{\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background: url('https://images.pexels.com/photos/590493/pexels-photo-590493.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260') repeat center;\\r\\n  background-size: 100% 100%;\\r\\n  background-position: center;\\r\\n  position: absolute;top:0; left:0\\r\\n}\\r\\n.jumbotron{\\r\\n  opacity: 0.7;\\r\\n  font-size: x-large;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"bg\\\">\\r\\n\\r\\n<div class=\\\"jumbotron\\\" align=\\\"center\\\">\\r\\n  <a routerLink=\\\"/profile\\\" *ngIf=\\\"role==='reader'\\\" >Profile</a>\\r\\n  <a routerLink=\\\"/author-page\\\" *ngIf=\\\"role==='author'\\\">My Page</a>\\r\\n  <a routerLink=\\\"/admin-page\\\" *ngIf=\\\"role==='admin'\\\" >Admin-Page</a>\\r\\n  &nbsp; &nbsp;\\r\\n  <a routerLink=\\\"/search\\\">Search</a>\\r\\n  &nbsp; &nbsp;\\r\\n  <a routerLink=\\\"/community\\\">Bookmarked Community</a>\\r\\n  &nbsp; &nbsp;\\r\\n  <a routerLink=\\\"/login\\\">Login</a>\\r\\n  &nbsp; &nbsp;\\r\\n  <a routerLink=\\\"/register\\\">Register</a>\\r\\n  <br>\\r\\n  <br>\\r\\n  <h1>Welcome to Bookmarked</h1>\\r\\n  <br>\\r\\n  <h2>Portal for Avid Readers and Budding Authors!</h2>\\r\\n  <br>\\r\\n  <br>\\r\\n  <br>\\r\\n  <h3 align=\\\"center\\\">\\r\\n    \\\"Books are a uniquely portable magic!\\\" -  Stephen King\\r\\n  </h3>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent implements OnInit {\n\n  _id;\n  role;\n\n  constructor( private userService: UserServiceClient) { }\n\n  ngOnInit() {\n    this.userService\n      .profile()\n      .then(user => {\n        if (user !== null) {\n          this._id = user._id;\n          this.role = user.role;\n          console.log(user._id);\n        } else {\n          this._id = -1;\n          this.role = '';\n        }\n\n      });\n  }\n\n}\n","module.exports = \".bg{\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background: url('https://images.pexels.com/photos/1098601/pexels-photo-1098601.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260')\\r\\n  repeat center;\\r\\n  background-size: 100% 100%;\\r\\n  background-position: center;\\r\\n  position: absolute;top:0; left:0\\r\\n}\\r\\n.jumbotron{\\r\\n  opacity: 0.9;\\r\\n  font-size: medium;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"bg\\\">\\n<div class=\\\"jumbotron\\\" align=\\\"center\\\">\\n  <h1>Login</h1>\\n  <br>\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"password\\\"\\n         type=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <button (click)=\\\"login(username, password)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Login\\n  </button>\\n  <div class=\\\"float-left\\\">\\n    <a routerLink=\\\"/register\\\">Register</a>\\n  </div>\\n  <div class=\\\"float-right\\\">\\n    <a routerLink=\\\"/home\\\">Home</a>\\n  </div>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Route, Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username;\n  password;\n  login(username, password) {\n    console.log([username, password]);\n    this.service.login(username, password)\n      .then((user) => {\n        if (user._id === -1) {\n          alert('Invalid');\n        } else if (user.role === 'author') {\n          this.router.navigate(['author-page']);\n        } else if (user.role === 'admin') {\n          this.router.navigate(['admin-page']);\n        } else {\n          this.router.navigate(['profile']);\n        }\n      });\n\n  }\n\n  constructor(private router: Router, private service: UserServiceClient) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".bg{\\r\\n  width: 100%;\\r\\n  background: url('https://images.pexels.com/photos/1112048/pexels-photo-1112048.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260')\\r\\n  repeat center;\\r\\n  background-size: 100% 100%;\\r\\n  background-position: center;\\r\\n  position: absolute;top:0; left:0\\r\\n}\\r\\n.jumbotron{\\r\\n  opacity: 0.8;\\r\\n  font-size: medium;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"bg\\\">\\n  <div class=\\\"jumbotron\\\">\\n  <h1>Profile</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         readonly\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"firstName\\\"\\n         placeholder=\\\"first name\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"lastName\\\"\\n         placeholder=\\\"lastName\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"email\\\"\\n         placeholder=\\\"email\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <button (click)=\\\"update()\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Update\\n  </button>\\n  <br>\\n  <h2>Liked Books :{{likedBooks.length}}</h2>\\n  <div *ngFor=\\\"let token of likedBooks\\\">\\n    <ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\">\\n    <a routerLink=\\\"/book/{{token.book.id}}\\\">  {{token.book.title}}</a>\\n    <button (click)=\\\"unlike(token.book._id)\\\"\\n      class=\\\"float-right btn btn-danger\\\">Unlike</button>\\n  </li>\\n    </ul>\\n</div>\\n  <br>\\n  <h2>Reviews :{{reviews.length}}</h2>\\n  <div *ngFor=\\\"let token of reviews\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\">\\n        Book Title:  <a routerLink=\\\"/book/{{token.book.id}}\\\">  {{token.book.title}}</a>\\n        <br>\\n        {{token.title}}\\n        <br>\\n        {{token.text}}\\n        <button (click)=\\\"removeReview(token.book._id)\\\"\\n          class=\\\"float-right btn btn-danger\\\">remove</button>\\n      </li>\\n    </ul>\\n  </div>\\n<br>\\n  <h2>Following :{{following.length}}</h2>\\n  <div *ngFor=\\\"let token of following\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\">\\n        <a routerLink=\\\"/user/{{token.following._id}}\\\">   {{token.following.firstName}}  {{token.following.lastName}}</a>\\n        <button (click)=\\\"unfollow(token.following._id)\\\"\\n          class=\\\"float-right btn btn-danger\\\">unfollow</button>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <br>\\n  <button class=\\\"btn btn-success\\\" (click)=\\\"logout()\\\">Logout</button>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/home\\\">Home</a>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/community\\\">Bookmarked Community</a>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/search\\\">Search</a>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from '../models/user.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\nimport {LikeServiceClient} from '../services/like.service.client';\nimport {Book} from '../models/book.model.client';\nimport {ReviewServiceClient} from '../services/review.service.client';\nimport {FollowServiceClient} from '../services/follow.service.client';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private likeService: LikeServiceClient,\n              private reviewService: ReviewServiceClient,\n              private followService: FollowServiceClient,\n              private router: Router) { }\n\n  user = {};\n  _id;\n  username;\n  password;\n  firstName;\n  lastName;\n  email;\n  likedBooks = [];\n  reviews = [];\n  following = [];\n\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n\n  update() {\n    // console.log(user);\n    this.service\n      .update(this._id, this.username, this.firstName, this.lastName, this.email, '', '');\n\n  }\n\n  unlike(bookId) {\n    this.likeService.userUnlikesBook(bookId)\n      .then((likes) => {\n        this.likeService\n          .findLikedBooksForUser()\n          .then(likedBooks => this.likedBooks = likedBooks );\n      });\n\n  }\n\n  removeReview(bookId) {\n    this.reviewService.userRemovesReview(bookId)\n      .then((review) => {\n        this.reviewService\n          .findReviewsForUser()\n          .then(reviews => this.reviews = reviews );\n      });\n\n  }\n\n  unfollow(userId) {\n    this.followService.userUnfollowsUser(userId)\n      .then((follow) => {\n        this.followService.findAllFollowing()\n          .then(following => this.following = following);\n      });\n\n  }\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user => {\n        if (user !== null) {\n          this._id = user._id;\n          this.username = user.username;\n          this.firstName = user.firstName;\n          this.lastName = user.lastName;\n          this.email = user.email;\n          console.log(user._id);\n        } else {\n          this._id = -1;\n        }\n\n      });\n\n    if (this._id !== -1) {\n      this.likeService\n        .findLikedBooksForUser()\n        .then(likedBooks => this.likedBooks = likedBooks);\n      this.reviewService.findReviewsForUser()\n        .then(reviews => this.reviews = reviews);\n      this.followService.findAllFollowing()\n        .then(following => this.following = following);\n    }\n  }\n\n}\n","module.exports = \".bg{\\r\\n  width: 100%;\\r\\n  background: url('https://images.pexels.com/photos/1112048/pexels-photo-1112048.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260')\\r\\n  repeat center;\\r\\n  background-size: 100% 100%;\\r\\n  background-position: center;\\r\\n  position: absolute;top:0; left:0\\r\\n}\\r\\n.jumbotron{\\r\\n  opacity: 0.7;\\r\\n  font-size: medium;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"bg\\\">\\r\\n  <div class=\\\"jumbotron\\\">\\r\\n    <a routerLink=\\\"/profile\\\" *ngIf=\\\"role==='reader'\\\" >Profile</a>\\r\\n    <a routerLink=\\\"/author-page\\\" *ngIf=\\\"role==='author'\\\">My Page</a>\\r\\n    <a routerLink=\\\"/admin-page\\\" *ngIf=\\\"role==='admin'\\\" >Admin-Page</a>\\r\\n    &nbsp; &nbsp;\\r\\n    <a routerLink=\\\"/community\\\">Bookmarked Community</a>\\r\\n    &nbsp; &nbsp;\\r\\n    <a routerLink=\\\"/home\\\">Home</a>\\r\\n    &nbsp; &nbsp;\\r\\n    <a routerLink=\\\"/search\\\">Search</a>\\r\\n    &nbsp; &nbsp;\\r\\n\\r\\n\\r\\n    <br>\\r\\n    <br>\\r\\n  <h2>User Profile</h2>\\r\\n  <h4>Username: {{user.username}}</h4>\\r\\n  <h4>First Name: {{user.firstName}}</h4>\\r\\n  <h4>Last Name: {{user.lastName}}</h4>\\r\\n  <h4>Email: {{user.email}}</h4>\\r\\n\\r\\n  <div *ngIf=\\\"user.role==='author'\\\">\\r\\n  <h4>Bio: {{user.bio}}</h4>\\r\\n  <h4>Snippet: {{user.snippet}}</h4>\\r\\n    <h2>Authored Books :{{books.length}}</h2>\\r\\n    <div *ngFor=\\\"let token of books\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <a routerLink=\\\"/book/{{token.book.id}}\\\">  {{token.book.title}}</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"user.role==='reader'\\\">\\r\\n    <h2>Liked Books :{{books.length}}</h2>\\r\\n    <div *ngFor=\\\"let token of books\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <a routerLink=\\\"/book/{{token.book.id}}\\\">  {{token.book.title}}</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n    <h2>Reviews :{{reviews.length}}</h2>\\r\\n    <div *ngFor=\\\"let token of reviews\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          Book Title:  <a routerLink=\\\"/book/{{token.book.id}}\\\">  {{token.book.title}}</a>\\r\\n          <br>\\r\\n          {{token.title}}\\r\\n          <br>\\r\\n          {{token.text}}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <h2>Following :{{following.length}}</h2>\\r\\n  <div *ngFor=\\\"let token of following\\\">\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <a routerLink=\\\"/user/{{token.following._id}}\\\">   {{token.following.firstName}}  {{token.following.lastName}}</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <br>\\r\\n  <button *ngIf=\\\"role === ''\\\"\\r\\n    (click)=\\\"followUser()\\\"\\r\\n    class=\\\"btn btn-primary\\\">Follow</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {User} from '../models/user.model.client';\nimport {AuthoredBookListServiceClient} from '../services/authored-booklist.service.client';\nimport {LikeServiceClient} from '../services/like.service.client';\nimport {PublicProfileServiceClient} from '../services/public-profile.service.client';\nimport {ReviewServiceClient} from '../services/review.service.client';\nimport {FollowServiceClient} from '../services/follow.service.client';\n\n@Component({\n  selector: 'app-public-profile',\n  templateUrl: './public-profile.component.html',\n  styleUrls: ['./public-profile.component.css']\n})\nexport class PublicProfileComponent implements OnInit {\n\n  _id;\n  role;\n  userId: '';\n  user: User;\n  books = [];\n  reviews = [];\n  following = [];\n\n  constructor( private route: ActivatedRoute,\n               private router: Router,\n               private service: UserServiceClient,\n               private publicProfileService: PublicProfileServiceClient,\n               private reviewService: ReviewServiceClient,\n               private followService: FollowServiceClient) {\n    this.route.params.subscribe(params => this.loadUser(params['userId']));\n  }\n\n  loadUser(userId) {\n    this.userId = userId;\n    this.service.findUserById(userId)\n      .then(user => {\n        this.user = user;\n        if (user.role === 'author') {\n          this.publicProfileService\n            .findAuthoredBooksUserById(user._id)\n            .then(authoredBooks => this.books = authoredBooks );\n        } else {\n          this.publicProfileService.findLikedBooksUserById(user._id)\n            .then(likedBooks => this.books = likedBooks );\n          this.publicProfileService.findReviewsUserById(user._id)\n            .then(reviews => this.reviews = reviews );\n          this.publicProfileService.findFollowingUserById(user._id)\n            .then(following => this.following = following );\n        }\n      });\n\n  }\n  followUser() {\n    this.followService.userfollowsUser(this.userId)\n      .then((follows) => {\n        this.router.navigate(['profile']);\n      });\n  }\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user => {\n        if (user !== null) {\n          this._id = user._id;\n          this.role = user.role;\n          console.log(user._id);\n        } else {\n          this._id = -1;\n          this.role = '';\n        }\n\n      });\n  }\n\n}\n","module.exports = \".bg{\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background: url('https://images.pexels.com/photos/1098601/pexels-photo-1098601.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260')\\r\\n  repeat center;\\r\\n  background-size: 100% 100%;\\r\\n  background-position: center;\\r\\n  position: absolute;top:0; left:0\\r\\n}\\r\\n.jumbotron{\\r\\n  opacity: 0.9;\\r\\n  font-size: medium;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"bg\\\">\\n  <div class=\\\"jumbotron\\\" align=\\\"center\\\">\\n  <h1>Register</h1>\\n  <br>\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"password\\\"\\n         type=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n  <input [(ngModel)]=\\\"password2\\\"\\n         type=\\\"password\\\"\\n         placeholder=\\\"verify password\\\"\\n         class=\\\"form-control\\\"/>\\n  <br>\\n    <select  [(ngModel)]=\\\"role\\\" class=\\\"form-control\\\">\\n      <option value=\\\"reader\\\" selected>reader</option>\\n      <option value=\\\"author\\\">author</option>\\n    </select>\\n  <br>\\n  <button (click)=\\\"register(username, password, password2, role)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Register\\n  </button>\\n  <div class=\\\"float-left\\\">\\n    <a routerLink=\\\"/login\\\">Login</a>\\n  </div>\\n  <div class=\\\"float-right\\\">\\n    <a routerLink=\\\"/home\\\">Home</a>\\n  </div>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  username;\n  password;\n  password2;\n  role;\n  user;\n  register(username, password, password2, role) {\n    if (password !== password2) {\n      alert('Passwords do not match');\n    } else {\n\n      this.service.findUserByUsername(username).then((user) => {\n        if (user._id === -1) {\n          this.service\n            .createUser(username, password, role)\n            .then(() => {\n              if (role === 'author') {\n                this.router.navigate(['author-page']);\n              } else if (role === 'admin') {\n          this.router.navigate(['admin-page']); } else {\n                this.router.navigate(['profile']);\n              }\n            });\n\n        } else {\n          alert('Username already present');\n        }\n      });\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <a routerLink=\\\"/profile\\\" *ngIf=\\\"role==='reader'\\\" >Profile</a>\\n  <a routerLink=\\\"/author-page\\\" *ngIf=\\\"role==='author'\\\">My Page</a>\\n  <a routerLink=\\\"/admin-page\\\" *ngIf=\\\"role==='admin'\\\" >Admin-Page</a>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/community\\\">Bookmarked Community</a>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/login\\\">Login</a>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/register\\\">Register</a>\\n  &nbsp; &nbsp;\\n  <a routerLink=\\\"/home\\\">Home</a>\\n  <br>\\n  <br>\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div>\\n      <input [(ngModel)]=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"Title\\\" >\\n      <small class=\\\"form-text text-muted\\\">Please enter atleast one word of the title of the book</small>\\n    </div>\\n\\n    <div>\\n      <input [(ngModel)]=\\\"author\\\" class=\\\"form-control\\\" placeholder=\\\"Author\\\" >\\n      <small class=\\\"form-text text-muted\\\">Optional: Enter the author name to enhance search</small>\\n    </div>\\n\\n    <button\\n      class=\\\"btn btn-success btn-block\\\"\\n      (click)=\\\"findBook(title, author)\\\">\\n      Find Book!\\n    </button>\\n\\n  </div>\\n  <br/>\\n  <br/>\\n<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\" *ngFor=\\\"let book of books\\\">\\n    <div>\\n      <img src={{book.volumeInfo.imageLinks.smallThumbnail}}/> &nbsp; &nbsp;\\n      <a routerLink=\\\"/book/{{book.id}}\\\"> {{book.volumeInfo.title}}</a>\\n    </div>\\n  </li>\\n\\n</ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SearchPageServiceClient} from '../services/search-page.service.client';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.css']\n})\nexport class SearchPageComponent implements OnInit {\n\n  books = [];\n  title: String;\n  author: String;\n  _id;\n  role;\n  constructor(private service: SearchPageServiceClient,\n              private userService: UserServiceClient) {\n\n  }\n\n  ngOnInit() {\n    this.userService\n      .profile()\n      .then(user => {\n        if (user !== null) {\n          this._id = user._id;\n          this.role = user.role;\n          console.log(user._id);\n        } else {\n          this._id = -1;\n          this.role = '';\n        }\n\n      });\n  }\n  findBook(title, author) {\n    this.service.findBookByTitle(title, author)\n      .then(books =>\n        this.books = books.items);\n  }\n\n}\n","import { environment } from '../../environments/environment';\r\nexport class AdminUserListServiceClient {\r\n\r\n  URL = environment.apiUrl;\r\n  // URL = 'http://localhost:4000';\r\n  // URL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com';\r\n\r\n  addUser(username, password, firstName, lastName, role) {\r\n    const user = {\r\n      username: username,\r\n      password: password,\r\n      role: role,\r\n      firstName: firstName,\r\n      lastName: lastName\r\n    };\r\n    return fetch(this.URL + '/api/admin/adduser', {\r\n      body: JSON.stringify(user),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  updateUser(_id, username, password, firstName, lastName, role){\r\n    const user = {\r\n      _id: _id,\r\n      username: username,\r\n      password: password,\r\n      role: role,\r\n      firstName: firstName,\r\n      lastName: lastName\r\n    };\r\n    return fetch(this.URL + '/api/admin/updateuser', {\r\n      body: JSON.stringify(user),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'put',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { environment } from '../../environments/environment';\r\nexport class AuthoredBookListServiceClient {\r\n  URL = environment.apiUrl;\r\n\r\n  BOOKURL = this.URL + '/api/authoredbook';\r\n  // BOOKURL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com/api/authoredbook';\r\n\r\n  USER_URL = this.URL + '/api/book/authors';\r\n  // USER_URL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com/book/authors';\r\n\r\n  addToAuthoredBooks(bookId) {\r\n    const url = this.BOOKURL + '/' + bookId;\r\n    return fetch(url, {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n  removeFromAuthoredBooks(bookId) {\r\n    const url = this.BOOKURL + '/' + bookId;\r\n    return fetch(url, {\r\n      method: 'delete',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  findAuthoredBooksForUser() {\r\n    return fetch(this.USER_URL, {\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class BookDetailsServiceClient {\r\n  findBookById(bookId) {\r\n    return fetch\r\n    ('https://www.googleapis.com/books/v1/volumes/' + bookId + '?&key=AIzaSyC-1n7EYMBCWCjk5FZUz5f1otN1isYTLU0')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","import { environment } from '../../environments/environment';\r\nexport class BookServiceClient {\r\n  URL = environment.apiUrl;\r\n\r\n  BOOKURL = this.URL + '/api/book';\r\n\r\n  // BOOKURL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com/api/book';\r\n\r\n  // ALLBOOKURL = 'http://localhost:4000/api/allbooks';\r\n  // ALLBOOKURL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com/api/allbooks';\r\n\r\n  createBook(id, title) {\r\n    const book = {\r\n      id: id,\r\n      title: title\r\n    };\r\n    return fetch(this.BOOKURL, {\r\n      body: JSON.stringify(book),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }) .then(response => response.json());\r\n  }\r\n\r\n  findAllBooks() {\r\n    return fetch(this.BOOKURL, {\r\n      credentials: 'include',  // include, same-origin, *omit\r\n      method: 'get'\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  deleteBookById(bookId) {\r\n    return fetch(this.BOOKURL + '/' + bookId + '/delete', {\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'delete',\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  findBookByCredential(id) {\r\n    const credentials = {\r\n      id: id\r\n    };\r\n    return fetch(this.URL + '/id', {\r\n      method: 'post',\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }) .then(response => response.json());\r\n  }\r\n}\r\n\r\n","import { environment } from '../../environments/environment';\r\nexport class FollowServiceClient {\r\n\r\n  URL = environment.apiUrl;\r\n\r\n  USER_URL = this.URL + '/api/userfollows';\r\n // USER_URL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com/api/userfollows';\r\n\r\n\r\n\r\n  findAllFollowing() {\r\n    return fetch(this.USER_URL, {\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  userfollowsUser(userId) {\r\n    const url = this.USER_URL + '/' + userId + '/follows';\r\n    return fetch(url, {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  userUnfollowsUser(userId) {\r\n    const url = this.USER_URL + '/' + userId + '/unfollows';\r\n    return fetch(url, {\r\n      method: 'delete',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n}\r\n","import { environment } from '../../environments/environment';\r\nexport class LikeServiceClient {\r\n\r\n  URL = environment.apiUrl;\r\n\r\n  USER_URL = this.URL + '/api/book/likes';\r\n  BOOK_URL = this.URL + '/api/book';\r\n\r\n  // USER_URL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com/api/book/likes';\r\n //  BOOK_URL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com/api/book';\r\n\r\n\r\n  findLikedBooksForUser() {\r\n    return fetch(this.USER_URL, {\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  userLikesBook(bookId) {\r\n    const url = this.BOOK_URL + '/' + bookId + '/likes';\r\n    return fetch(url, {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  userUnlikesBook(bookId) {\r\n    const url = this.BOOK_URL + '/' + bookId + '/unlikes';\r\n    return fetch(url, {\r\n      method: 'delete',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n}\r\n","import { environment } from '../../environments/environment';\r\nexport class PublicProfileServiceClient {\r\n\r\n  URL = environment.apiUrl;\r\n  // URL = 'http://localhost:4000';\r\n  // URL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com';\r\n\r\n  findLikedBooksUserById(userId) {\r\n    return fetch(this.URL + '/api/user/' + userId + '/liked')\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findAuthoredBooksUserById(userId) {\r\n    return fetch(this.URL + '/api/user/' + userId + '/authored')\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findReviewsUserById(userId) {\r\n    return fetch(this.URL + '/api/user/' + userId + '/reviewed')\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findFollowingUserById(userId) {\r\n    return fetch(this.URL + '/api/user/' + userId + '/userfollows')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","import { environment } from '../../environments/environment';\r\n\r\nexport class ReviewServiceClient {\r\n\r\n  URL = environment.apiUrl;\r\n\r\n  USER_URL = this.URL + '/api/book/reviews';\r\n  BOOK_URL = this.URL + '/api/book';\r\n  ALLREVIEW = this.URL + '/api/allreviews';\r\n  REVIEW_URL = this.URL + '/api/review';\r\n\r\n  // USER_URL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com/api/book/reviews';\r\n  // BOOK_URL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com/api/book';\r\n  // ALLREVIEW_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com/api/allreviews';\r\n  // REVIEW_URL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com/api/review';\r\n\r\n  findAllReviews() {\r\n    return fetch(this.ALLREVIEW, {\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  deleteReviewById(reviewId){\r\n    return fetch(this.REVIEW_URL + '/' + reviewId + '/delete',{\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'delete',\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  findReviewsForUser() {\r\n    return fetch(this.USER_URL, {\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  userReviewsBook(bookId, reviewTitle, reviewText) {\r\n    const url = this.BOOK_URL + '/' + bookId + '/reviews';\r\n    const review = {\r\n      title : reviewTitle,\r\n      text: reviewText\r\n    };\r\n    return fetch(url, {\r\n      method: 'post',\r\n      body: JSON.stringify(review),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  userRemovesReview(bookId) {\r\n    const url = this.BOOK_URL + '/' + bookId + '/unreviews';\r\n    return fetch(url, {\r\n      method: 'delete',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n}\r\n","export class SearchPageServiceClient {\r\n  findBookByTitle(title, author) {\r\n    return fetch\r\n    ('https://www.googleapis.com/books/v1/volumes?q=' + title + '+inauthor:' + author + '&key=AIzaSyC-1n7EYMBCWCjk5FZUz5f1otN1isYTLU0')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","import { environment } from '../../environments/environment';\r\nexport class UserServiceClient {\r\n\r\n  URL = environment.apiUrl;\r\n\r\n  // URL = 'http://localhost:4000';\r\n  // URL_HEROKU = 'https://suledisha-project-nodejs.herokuapp.com';\r\n\r\n  findUserById(userId) {\r\n    return fetch(this.URL + '/api/user/' + userId)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findAllUsers() {\r\n    return fetch(this.URL + '/api/user')\r\n      .then(response => response.json());\r\n  }\r\n\r\n\r\n  findAllReaders() {\r\n    return fetch(this.URL + '/api/readers')\r\n      .then(response => response.json());\r\n  }\r\n\r\n\r\n  findAllAuthors() {\r\n    return fetch(this.URL + '/api/authors')\r\n      .then(response => response.json());\r\n  }\r\n\r\n  deleteUserById(userId) {\r\n    return fetch(this.URL + '/api/user/' + userId, {\r\n      method: 'delete'\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  findUserByUsername(username) {\r\n    const credentials = {\r\n      username: username\r\n    };\r\n    return fetch(this.URL + '/api/register', {\r\n      method: 'post',\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }) .then(response => response.json());\r\n  }\r\n\r\n  profile() {\r\n    return fetch(this.URL + '/api/profile',\r\n      {\r\n        credentials: 'include', // include, same-origin, *omit\r\n      })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  loggedIn() {\r\n    const noUser = {\r\n      _id: -1,\r\n      role: ''\r\n    };\r\n    return fetch(this.URL + '/api/profile',\r\n      {\r\n        credentials: 'include', // include, same-origin, *omit\r\n      }).then(response => {\r\n        if (response.json() === null) {\r\n          return noUser;\r\n\r\n        } else {\r\n          return response.json();\r\n        }\r\n    });\r\n  }\r\n  login(username, password) {\r\n    const credentials = {\r\n      username : username,\r\n      password: password\r\n    };\r\n    return fetch(this.URL + '/api/login', {\r\n      method: 'post',\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n  logout() {\r\n    return fetch(this.URL + '/api/logout', {\r\n      method: 'post',\r\n      credentials: 'include', // include, same-origin, *omit\r\n    });\r\n  }\r\n\r\n  createUser(username, password, role) {\r\n    const user = {\r\n      username: username,\r\n      password: password,\r\n      role: role\r\n    };\r\n    return fetch(this.URL + '/api/user', {\r\n      body: JSON.stringify(user),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n  update(_id, username, firstName, lastName, email, bio, snippet) {\r\n    const url = this.URL + '/api/profile';\r\n    const user = {_id, username, firstName, lastName, email, bio, snippet};\r\n    return fetch(url, {\r\n      method: 'put',\r\n      body: JSON.stringify(user),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4000'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}